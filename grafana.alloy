/*
logging {
  level  = "debug"    # or even "trace" for more detail
  format = "logfmt"   # or "json" for structured logging
}

local.file_match "local_files" {
  path_targets = [
    {"__path__" = "/var/log/sourcebot/*.log"}
  ]
  sync_period = "5s"
}

loki.source.file "log_scrape" {
  targets    = local.file_match.local_files.targets
  forward_to = [loki.process.filter_logs.receiver]
  tail_from_end = true
}

loki.process "filter_logs" {
  stage.drop {
    source = ""
    expression  = ""
    drop_counter_reason = "noisy"
  }
  forward_to = [loki.write.grafana_loki.receiver]
}

loki.write "grafana_loki" {
  endpoint {
    url = sys.env("GRAFANA_LOKI_ENDPOINT")

    basic_auth {
      username = sys.env("GRAFANA_USERNAME")
      password = sys.env("GRAFANA_PASSWORD")
    }
  }
}
*/

prometheus.scrape "local_app" {
  targets = [
    {
      __address__ = "localhost:6070",
    },
    {
      __address__ = "localhost:3060",
    },
  ]

  metrics_path = "/metrics"
  scrape_timeout = "500ms"
  scrape_interval = "15s"

  job_name = sys.env("GRAFANA_ENVIRONMENT")
  
  forward_to = [
    prometheus.remote_write.grafana_cloud.receiver,
  ]
}

prometheus.remote_write "grafana_cloud" {
   endpoint {
      url  = sys.env("GRAFANA_ENDPOINT")
  
      basic_auth {
        username = sys.env("GRAFANA_USERNAME")
        password = sys.env("GRAFANA_PASSWORD")
      }
   }
}